#!/usr/bin/env python3
import os
import signal
import sys
import time

from pathlib import Path

from sh import git, rsync

import build
import config

from utils import die, confirm


def preflight_checks(blog_out_dir):
    if not blog_out_dir.is_dir():
        die('{} does not exist'.format(blog_out_dir))

    git_dir = blog_out_dir / '.git'
    if not git_dir.is_dir():
        die('{} is not a git repository'.format(blog_out_dir))


def check_local_build():
    build.build(clean=True)
    pid = os.fork()
    if pid == 0:
        build.serve()
        sys.exit(0)

    # In parent

    # Give enough time to dev server to start so that its output does not
    # come in the confirm question
    time.sleep(1)

    ok = confirm('Local changes look good?')
    os.kill(pid, signal.SIGTERM)
    if not ok:
        sys.exit(1)


def check_modified_files():
    status = git.status('-s')
    if not status:
        return

    print('Git repository is not clean:')
    print(status)
    print()
    if not confirm('Add new files, commit changes and push?'):
        sys.exit(1)
    git.add('.')
    git.commit('-m', 'rstblog-deploy committing changes')
    git.push()


def check_need_push():
    commits = git('rev-list', 'origin..')
    commits = commits.strip()
    if not commits:
        return

    print('Unpushed commits:')
    git.log('--format=oneline', 'origin..')
    print()
    if not confirm('Push them?'):
        sys.exit(1)
    git.push()


def deploy(blog_out_dir):
    git_out = git.bake('-C', blog_out_dir)
    git_out('pull', _out=build.pr)

    rsync('-av', '--delete', '--max-delete', '10', '--exclude', '.git', '_build/', blog_out_dir, _out=build.pr)

    # Push to server
    status = git_out.status('-s')
    if status:
        print('Committing changes in output repository')
        git_out.add('.')
        git_out.commit('-a', '-m', 'Deploying')
    print('Pushing changes in output repository')
    git_out.push(_out=build.pr)


def main():
    cfg = config.load()
    blog_out_dir = Path(cfg['BLOG_OUT_DIR'])
    preflight_checks(blog_out_dir)
    os.chdir(cfg['BLOG_DIR'])

    check_local_build()
    check_modified_files()
    check_need_push()
    deploy(cfg['BLOG_OUT_DIR'])
    return 0


if __name__ == '__main__':
    sys.exit(main())
# vi: ts=4 sw=4 et
